<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AngularJS Current Date & Time</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body ng-app="timeApp" ng-controller="timeController">

    <h2>Current Date & Time:</h2>
    <p>{{ currentTime }}</p>

    <script>
        var app = angular.module('timeApp', []);

        app.controller('timeController', function($scope, $interval) {
            // Function to update time
            var updateTime = function() {
                $scope.currentTime = new Date().toLocaleString();
            };

            // Update time every second
            $interval(updateTime, 1000);

            // Initialize with current time
            updateTime();
        });
    </script>

</body>
</html>
Q2
const EventEmitter = require('events');
const myEmitter = new EventEmitter();

console.log('Starting event loop demonstration...');

// Set up event listener first
myEmitter.on('userAction', (phase, data) => {
    console.log(`Callback executed: ${phase} - ${data}`);
});

// Check phase (runs before timers)
setImmediate(() => {
    console.log('Check phase: Immediate execution');
    myEmitter.emit('userAction', 'Check phase', 'immediate callback');
});

// Timer phase (1 second)
setTimeout(() => {
    console.log('Timer phase: 1 second timer');
    myEmitter.emit('userAction', 'Timer phase', 'timer callback');
}, 1000);

// Interval (2 seconds)
const interval = setInterval(() => {
    myEmitter.emit('userAction', 'Timer phase', 'interval callback');
}, 2000);

// Cleanup
setTimeout(() => {
    clearInterval(interval);
    console.log('Demonstration complete');
    process.exit();
}, 5000);

console.log('Main program ended - Event loop running...');
